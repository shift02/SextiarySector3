// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

//日本語
tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'


version = "1.3.5"
group= "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "sextiarysector3"

//ext.libMCEconomy3 = "./lib/mceconomy3"
//ext.libAdditionalStatus = "./lib/additionalstatus"
ext.lang = "./lang"
ext.apiSeason = "./api/season"

minecraft {
    version = "1.10.2-12.18.3.2316"//12.18.3.2185
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160518"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
	java {
		srcDir project.apiSeason + "/src/main/java"
		//srcDir project.libMCEconomy3 + "/src/main/java"
		//srcDir project.libAdditionalStatus + "/src/main/java"
	}
	resources {
		srcDir project.lang
		//srcDir project.libMCEconomy3 + "/src/main/resources"
		//srcDir project.libAdditionalStatus + "/src/main/resources"
	}
    }
    test {
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided
    }
}

repositories {
    maven { // JEI
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { url 'https://shift02.github.io/maven/' }
}


dependencies {

    compile 'shift.mceconomy3:mceconomy3:1.0.4:dev'
    compile 'shift.mceconomy3compat:mceconomy3compat:1.0.1:dev'
    compile 'shift.additionalstatus:additionalstatus:1.2.0:dev'

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    // compile against the JEI API
    deobfCompile "mezz.jei:jei_1.10.2:3.10.0.261:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_1.10.2:3.10.0.261"

}

jar {


  //exclude('shift/mceconomy3/**')
  //exclude('assets/mceconomy3/**')

  //exclude('shift/additionalstatus/**')
  //exclude('assets/additionalstatus/**')

  manifest {
    attributes 'FMLAT': 'sextiarysector3_at.cfg'
  }


}

task devJar(type: Jar) {

    from sourceSets.main.output
    from sourceSets.main.allSource

    //exclude('shift/mceconomy3/**')
    //exclude('assets/mceconomy3/**')
    //exclude('shift/additionalstatus/**')
    //exclude('assets/additionalstatus/**')


    classifier = 'dev'
}

artifacts {
    archives devJar
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs[0]) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    //from(sourceSets.main.resources.srcDirs[2]) {
    //    exclude 'mcmod.info'
    //    exclude '**/*.md'
    //}

    //from(sourceSets.main.resources.srcDirs[3]) {
    //    exclude 'mcmod.info'
    //    exclude '**/*.md'
    //}
}
